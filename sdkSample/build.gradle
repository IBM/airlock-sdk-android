apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'


allprojects {
    repositories {
        mavenCentral()
        google()
        flatDir {
            dirs '../sdk/build/outputs/aar/'
        }
    }
}

buildscript {
    repositories {
        jcenter()
        google()
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.2.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }

}

android {
    compileSdkVersion 29
    buildToolsVersion '30.0.2'

    defaultConfig {
        applicationId "com.weather.airlockSampleApp"
        minSdkVersion 23
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        multiDexEnabled true

    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    signingConfigs {
        release {
            storeFile file("/Users/denisvoloshin/keys/sdkSample.jks")
            storePassword "nnazgull1"
            keyAlias "key0"
            keyPassword "nnazgull1"
        }
    }
    buildTypes {
        release {
            minifyEnabled false
        }
        debug {
            testCoverageEnabled true
            minifyEnabled false
        }
    }

    lintOptions {
        abortOnError false
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    testImplementation 'junit:junit:4.13.2'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.squareup.okhttp3:okhttp:3.4.1'
    implementation 'com.squareup.okhttp3:okhttp-urlconnection:3.4.1'
    implementation project(path: ':sdk')
    testImplementation 'org.robolectric:robolectric:4.5.1'
    testImplementation 'org.khronos:opengl-api:gl1.1-android-2.1_r1'
    implementation "androidx.lifecycle:lifecycle-runtime:2.2.0"
    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"
    implementation project(path: ':airlock-sdk-common')
}
repositories {
    mavenCentral()
}